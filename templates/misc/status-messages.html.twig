{#
/**
 * @file
 * Theme override for status messages.
 *
 * Displays status, error, and warning messages, grouped by type.
 *
 * An invisible heading identifies the messages for assistive technology.
 * Sighted users see a colored box. See http://www.w3.org/TR/WCAG-TECHS/H69.html
 * for info.
 *
 * Add an ARIA label to the contentinfo area so that assistive technology
 * user agents will better describe this landmark.
 *
 * Available variables:
 * - message_list: List of messages to be displayed, grouped by type.
 * - status_headings: List of all status types.
 * - display: (optional) May have a value of 'status' or 'error' when only
 *   displaying messages of that specific type.
 * - attributes: HTML attributes for the element, including:
 *   - class: HTML classes.
 */
#}

{% block messages %}
  {% for type, messages in message_list %}
    {%
      set classes = [
        'messages',
        'messages--' ~ type,
        'js-messages'
      ]
    %}

    <div{{ attributes.addClass(classes)|without('role', 'aria-label') }}
        aria-label="{{ status_headings[type] }}" role="contentinfo">
      <div class="message__inner">
        {% if status_headings[type] %}
          <h2 class="visually-hidden">{{ status_headings[type] }}</h2>
        {% endif %}

        <ul class="messages__list">
          {% for message in messages %}
            <li class="messages__item">{{ message }}</li>
          {% endfor %}
        </ul>

        <div class="messages__close">
          <button class="button js-messages-close" type="button">
            {{ 'Close'|t }}
          </button>
        </div>
      </div>
    </div>

    {# Remove type specific classes. #}
    {% set attributes = attributes.removeClass(classes) %}
  {% endfor %}
{% endblock messages %}
